$ ansible [pattern] -m [module] -a "[module options]"
$ ansible atlanta -a "/sbin/reboot"
An ad hoc task can harness the power of Ansible and SCP to transfer many files to multiple machines in parallel. To transfer a file directly to all servers in the [atlanta] group:
$ ansible atlanta -m ansible.builtin.copy -a "src=/etc/hosts dest=/tmp/hosts"
To ensure a package is installed without updating it:

$ ansible webservers -m ansible.builtin.yum -a "name=acme state=present"
To ensure a specific version of a package is installed:

$ ansible webservers -m ansible.builtin.yum -a "name=acme-1.5 state=present"
To ensure a package is at the latest version:

$ ansible webservers -m ansible.builtin.yum -a "name=acme state=latest"
To ensure a package is not installed:

$ ansible webservers -m ansible.builtin.yum -a "name=acme state=absent"

Facts represent discovered variables about a system. You can use facts to implement conditional execution of tasks but also just to get ad hoc information about your systems. To see all facts:

$ ansible all -m ansible.builtin.setup
root@control:~/vprofile/excerise1# cat inventory
all:
  hosts:
    web01:
      ansible_host: 192.168.10.3
    web02:
      ansible_host: 192.168.10.4
    db01:
      ansible_host: 192.168.10.5

  children:
    webservers:
      hosts:
        web01:
        web02:
    dbservers:
      hosts:
        db01:
    dc_oregon:
      children:
        webservers:
        dbservers:
      vars:
        ansible_user: vagrant
        ansible_ssh_private_key_file:  /root/.ssh/id_rsa
root@control:~/vprofile/excerise1#


root@control:~/vprofile/excerise1# ansible all -m ansible.builtin.setup -i inventory
web01 | SUCCESS => {
    "ansible_facts": {
        "ansible_all_ipv4_addresses": [
            "10.0.2.15",
            "192.168.10.3"
        ],
        "ansible_all_ipv6_addresses": [
            "fe80::5054:ff:fe4d:77d3",
            "fe80::a00:27ff:fe2a:126"
        ],



ansible-inventory -i inventory --list

all:
  hosts:
    web01:
      ansible_host: 172.31.33.37
      ansible_user: ec2-user
      ansible_ssh_private_key_file: clientkey.pem

    web02:
      ansible_host: 172.31.45.100
      ansible_user: ec2-user
      ansible_ssh_private_key_file: clientkey.pem

    db01:
      ansible_host: 172.31.33.80
      ansible_user: ec2-user
      ansible_ssh_private_key_file: clientkey.pem

  children:
    webservers:
      hosts:
        web01:
        web02:
    dbservers:
      hosts:
        db01:
    dc_oregon:
      children:
        webservers:
        dbservers:
root@ip-172-31-32-89:~#


